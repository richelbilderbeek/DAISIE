{
    "collab_server" : "",
    "contents" : "\\name{DAISIE_ML}\n\\alias{DAISIE_ML}\n\\title{Maximization of the loglikelihood under the DAISIE model}\n\\description{\nThis function computes the maximum likelihood estimates of the parameters of the\nDAISIE model for data from lineages colonizing an island. It also outputs the\ncorresponding loglikelihood that can be used in model comparisons.\n}\n\\usage{\nDAISIE_ML(\n   datalist,\n   initparsopt,\n   idparsopt,\n   parsfix,\n   idparsfix,\n   idparsnoshift = 6:10,\n   res = 100,\n   ddmodel = 0,\n   cond = 0,\n   eqmodel = 0,\n   x_E = 0.95,\n   x_I = 0.98,\n   tol = c(1e-04, 1e-05, 1e-07),\n   maxiter = 1000 * round((1.25)^length(idparsopt)),\n   methode = \"lsodes\",\n   optimmethod = 'subplex'\n   )\n}\n\\arguments{\n  \\item{datalist}{Data object containing information on colonisation and branching times. This object can be generated using the DAISIE_dataprep function, which converts a user-specified data table into a data object, but the object can of course also be entered directly. It is an R list object with the following elements.\\cr\n  The first element of the list has two three components: \\cr \\cr\n  \\code{$island_age} - the island age \\cr\n  Then, depending on whether a distinction between types is made, we have:\\cr\n  \\code{$not_present} - the number of mainland lineages that are not present on the island \\cr  \n  or:\\cr\n  \\code{$not_present_type1} - the number of mainland lineages of type 1 that are not present on the island \\cr  \n  \\code{$not_present_type2} - the number of mainland lineages of type 2 that are not present on the island \\cr \\cr  \n  The remaining elements of the list each contains information on a single colonist lineage on the island and has 5 components:\\cr \\cr\n  \\code{$colonist_name} - the name of the species or clade that colonized the island \\cr  \n  \\code{$branching_times} - island age and stem age of the population/species in the case of Non-endemic, Non-endemic_MaxAge and Endemic anagenetic species. For cladogenetic species these should be island age and branching times of the radiation including the stem age of the radiation.\\cr                          \n  \\code{$stac} - the status of the colonist \\cr \\cr\n  * Non_endemic_MaxAge: 1 \\cr\n  * Endemic: 2 \\cr\n  * Endemic&Non_Endemic: 3 \\cr\n  * Non_endemic: 4 \\cr \\cr\n  \\code{$missing_species} - number of island species that were not sampled for particular clade (only applicable for endemic clades) \\cr\n  \\code{$type1or2} - whether the colonist belongs to type 1 or type 2 \\cr\n  } \n  \\item{initparsopt}{The initial values of the parameters that must be optimized}\n  \\item{idparsopt}{\n   The ids of the parameters that must be optimized. The ids are defined as follows: \\cr \\cr\n   id = 1 corresponds to lambda^c (cladogenesis rate) \\cr\n   id = 2 corresponds to mu (extinction rate) \\cr\n   id = 3 corresponds to K (clade-level carrying capacity) \\cr\n   id = 4 corresponds to gamma (immigration rate) \\cr\n   id = 5 corresponds to lambda^a (anagenesis rate) \\cr   \n   id = 6 corresponds to lambda^c (cladogenesis rate) for an optional subset of the species \\cr\n   id = 7 corresponds to mu (extinction rate) for an optional subset of the species\\cr\n   id = 8 corresponds to K (clade-level carrying capacity) for an optional subset of the species\\cr\n   id = 9 corresponds to gamma (immigration rate) for an optional subset of the species\\cr\n   id = 10 corresponds to lambda^a (anagenesis rate) for an optional subset of the species\\cr   \n   id = 11 corresponds to p_f (fraction of mainland species that belongs to the second subset of species\n   }\n  \\item{idparsfix}{The ids of the parameters that should not be optimized, e.g. c(1,3) if lambda^c and K should not be optimized.}\n  \\item{parsfix}{The values of the parameters that should not be optimized }\n  \\item{idparsnoshift}{The ids of the parameters that should not be different between two groups of species; \nThis can only apply to ids 6:10, e.g. idparsnoshift = c(6,7) means that lambda^c and mu have the same values for both groups}\\cr\n  \\item{res}{Sets the maximum number of species for which a probability must be computed, must be larger than the size of the largest clade }\n  \\item{ddmodel}{Sets the model of diversity-dependence: \\cr \\cr\n    ddmodel = 0 : no diversity dependence \\cr\n    ddmodel = 1 : linear dependence in speciation rate \\cr\n    ddmodel = 11: linear dependence in speciation rate and in immigration rate \\cr\n    ddmodel = 2 : exponential dependence in speciation rate\\cr\n    ddmodel = 21: exponential dependence in speciation rate and in immigration rate\\cr\n  }\n  \\item{cond}{\n    cond = 0 : conditioning on island age \\cr\n    cond = 1 : conditioning on island age and non-extinction of the island biota \\cr\n  }\n  \\item{eqmodel}{Sets the equilibrium constraint that can be used during the likelihood optimization.\\cr\\cr\n    eqmodel = 0 : no equilibrium is assumed \\cr\n    eqmodel = 13 : near-equilibrium is assumed on endemics using deterministic equation for endemics and immigrants. Endemics must be within x_E of the equilibrium value\\cr\n    eqmodel = 15 : near-equilibrium is assumed on endemics and immigrants using deterministic equation for endemics and immigrants. Endemics must be within x_E of the equilibrium value, while non-endemics must be within x_I of the equilibrium value\n  }\n  \\item{x_E}{ Sets the fraction of the equlibrium endemic diversity above which the endemics are assumed to be in equilibrium; only active for eqmodel = 13 or 15 }\n  \\item{x_I}{ Sets the fraction of the equlibrium non-endemic diversity above which the system is assumed to be in equilibrium; only active for eqmodel = 15 }\n  \\item{tol}{Sets the tolerances in the optimization. Consists of: \\cr\n   reltolx = relative tolerance of parameter values in optimization \\cr\n   reltolf = relative tolerance of function value in optimization \\cr\n   abstolx = absolute tolerance of parameter values in optimization\n  }\n  \\item{maxiter}{Sets the maximum number of iterations in the optimization}\n  \\item{methode}{Method of the ODE-solver. See package deSolve for details. Default is \"lsodes\"}\n  \\item{optimmethod}{Method used in likelihood optimization. Default is \"subplex\" (see subplex package). Alternative is 'simplex' which was the method in previous versions.}  \n}\n\\details{The result of sort(c(idparsopt, idparsfix, idparsnoshift)) should be identical to c(1:10). If not, an error is reported that the input is incoherent. The same happens when the length of initparsopt is different from the length of idparsopt, and the length of parsfix is different from the length of idparsfix.\\cr\nIncluding the 11th parameter (p_f) in either idparsopt or idparsfix (and therefore initparsopt or parsfix) is optional. If this parameter is not specified, then the information in the data is used, otherwise the information in the data is overruled.\n}\n\\value{The output is a dataframe containing estimated parameters and maximum loglikelihood.\n  \\item{lambda_c}{ gives the maximum likelihood estimate of lambda^c, the rate of cladogenesis}\n  \\item{mu}{ gives the maximum likelihood estimate of mu, the extinction rate}\n  \\item{K}{ gives the maximum likelihood estimate of K, the carrying-capacity}\n  \\item{gamma}{ gives the maximum likelihood estimate of gamma, the immigration rate }\n  \\item{lambda_a}{ gives the maximum likelihood estimate of lambda^a, the rate of anagenesis}\n  \\item{lambda_c2}{ gives the maximum likelihood estimate of lambda^c2, the rate of cladogenesis for the optional second group of species}\n  \\item{mu2}{ gives the maximum likelihood estimate of mu2, the extinction rate for the optional second group of species}\n  \\item{K2}{ gives the maximum likelihood estimate of K2, the carrying-capacity for the optional second group of species}\n  \\item{gamma2}{ gives the maximum likelihood estimate of gamma2, the immigration rate for the optional second group of species}\n  \\item{lambda_a2}{ gives the maximum likelihood estimate of lambda^a2, the rate of anagenesis for the optional second group of species}\n  \\item{loglik}{ gives the maximum loglikelihood}\n  \\item{df}{ gives the number of estimated parameters, i.e. degrees of feedom}\n  \\item{conv}{ gives a message on convergence of optimization; conv = 0 means convergence}\n}\n\\references{\nValente, L.M., A.B. Phillimore and R.S. Etienne (2015). Equilibrium and non-equilibrium dynamics simultaneously operate in the Galapagos islands. Ecology Letters 18: 844-852. <DOI:10.1111/ele.12461>.}\n\\author{\nRampal S. Etienne\n}\n\\seealso{\n \\code{\\link{DAISIE_loglik_all}},\n \\code{\\link{DAISIE_sim}}\n}\n\\examples{\ncat(\"\n### When all species have the same rates, and we want to optimize all 5 parameters,\n# we use:\n\ndata(Galapagos_datalist)\nDAISIE_ML(\n   datalist = Galapagos_datalist,\n   initparsopt = c(2.5,2.7,20,0.009,1.01),\n   ddmodel = 11,\n   idparsopt = 1:5,\n   parsfix = NULL,\n   idparsfix = NULL\n)\n\n### When all species have the same rates, and we want to optimize all parameters \n# except K (which we set equal to Inf), we use:\n\ndata(Galapagos_datalist)\nDAISIE_ML(\n   datalist = Galapagos_datalist,\n   initparsopt = c(2.5,2.7,0.009,1.01),\n   idparsopt = c(1,2,4,5),\n   parsfix = Inf,\n   idparsfix = 3\n   )\n\n### When all species have the same rates except that the finches have a different\n# rate of cladogenesis, and we want to optimize all parameters except K (which we\n# set equal to Inf), fixing the proportion of finch-type species at 0.163, we use:\n\ndata(Galapagos_datalist_2types)\nDAISIE_ML(\n   datalist = Galapagos_datalist_2types,\n   initparsopt = c(0.38,0.55,0.004,1.1,2.28),\n   idparsopt = c(1,2,4,5,6),\n   parsfix = c(Inf,Inf,0.163),\n   idparsfix = c(3,8,11),\n   idparsnoshift = c(7,9,10)\n   )\n\n### When all species have the same rates except that the finches have a different\n# rate of cladogenesis, extinction and a different K, and we want to optimize all\n# parameters, fixing the proportion of finch-type species at 0.163, we use:\n\ndata(Galapagos_datalist_2types)\nDAISIE_ML(\n   datalist = Galapagos_datalist_2types,\n   ddmodel = 11,   \n   initparsopt = c(0.19,0.09,0.002,0.87,20,8.9,15),\n   idparsopt = c(1,2,4,5,6,7,8),\n   parsfix = c(Inf,0.163),\n   idparsfix = c(3,11),\n   idparsnoshift = c(9,10)\n   )\n\n\n### When all species have the same rates except that the finches have a different\n# rate of extinction, and we want to optimize all parameters except K (which we \n# set equal to Inf), and we also# want to estimate the fraction of finch species\n# in the mainland pool. we use:\n\ndata(Galapagos_datalist_2types)\nDAISIE_ML(\n   datalist = Galapagos_datalist_2types,\n   initparsopt = c(2.48,2.7,0.009,1.01,2.25,0.163),\n   idparsopt = c(1,2,4,5,7,11),\n   parsfix = c(Inf,Inf),\n   idparsfix = c(3,8),\n   idparsnoshift = c(6,9,10)\n   )\n\")\n}\n\\keyword{models}",
    "created" : 1479114364073.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1378153187",
    "id" : "9EE3DBFF",
    "lastKnownWriteTime" : 1479114865,
    "last_content_update" : 1479114865237,
    "path" : "D:/data/Ms/DAISIE/DAISIE/man/DAISIE_ML.Rd",
    "project_path" : "man/DAISIE_ML.Rd",
    "properties" : {
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_doc"
}